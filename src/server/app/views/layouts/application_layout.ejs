<!DOCTYPE html>
<html lang="en" ng-app='memoryDiveApp' ng-controller="TitleCtrl">
  <head>
      <title ng-bind-template="{{title}}">Memory Dive</title>
      <meta charset="utf8">
      <meta name="viewport" content="initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0">
      <meta name="description" content="">
      <meta name="author" content="">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">

      <script type="text/javascript">
        //  This is needed in development as base URL might not be the same as the one we are landing on.
        if(window.location.href.indexOf('<%= process.env.MEMORY_DIVE_BASE_URL %>') !== 0) {
          window.location = '<%= process.env.MEMORY_DIVE_BASE_URL %>';
        }
        //  This is needed because Facebook login redirects add #_=_ at the end of the URL
        if(window.location.href.indexOf('#_=_') > 0) {
          window.location = window.location.href.replace(/#.*/, '');
        }
      </script>

      <link rel='stylesheet' href='/css/app.css' />

      <script src="/js/vendor.js"></script>
      <script src="/js/app.js"></script>
  </head>

  <body ng-controller="MenuBarCtrl">

    <div class="navbar navbar-inverse navbar-fixed-top">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-inverse-collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">Memory Dive</a>
        </div>
        <div class="navbar-collapse collapse navbar-inverse-collapse">
          <ul class="nav navbar-nav">
            <li ng-if="userId"><a href="/app">Home</a></li>
            <li ng-if="!userId"><a href="/">Home</a></li>
            <li ng-if="userId"><a href="/app/calendar">Calendar</a></li>
          </ul>
          <ul class="nav navbar-nav navbar-right">
            <li ng-if="userId">
              <form ng-submit="search(searchQuery); searchQuery=''" class="navbar-form" role="search">
                <div class="input-group input-group-sm search-group">
                  <input type="text" class="form-control" ng-model="searchQuery" placeholder="Search">
                  <span class="input-group-btn">
                    <button class="btn btn-primary" type="submit">Go!</button>
                  </span>
                </div>
              </form>
            </li>
            <li ng-if="userId"><a href="/app/config">Config</a></li>
            <li ng-if="userId"><a href="" ng-click="signout()">Sign out</a></li>
            <li ng-if="userId"><img ng-src="{{user.picture.url}}" class="img-rounded img-responsive"></li>
          </ul>
        </div>
      </div>
    </div>

    <div class="container">

        <div ng-view></div>

    </div>

    <footer>
        <div class="footer-copyright">
            <p>&copy; <a href="http://softwaremarbles.com" target="_blank">Software Marbles SpA</a> <% var d=new Date();%><%= d.getFullYear() %></p>
        </div>
    </footer>

  </body>
</html>

<%
  //  Use UserVoice for communication with users.
  if(locals.user && locals.user.createdOn) {
%>

<script>

// Include the UserVoice JavaScript SDK (only needed once on a page)
UserVoice=window.UserVoice||[];(function(){var uv=document.createElement('script');uv.type='text/javascript';uv.async=true;uv.src='//widget.uservoice.com/yS5bOLUj0uVa0y0m2qghQ.js';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(uv,s)})();

//
// UserVoice Javascript SDK developer documentation:
// https://www.uservoice.com/o/javascript-sdk
//

// Set colors
UserVoice.push(['set', {
  accent_color: '#e2753a',
  trigger_color: 'white',
  trigger_background_color: '#6aba2e'
}]);

// Identify the user and pass traits
// To enable, replace sample data with actual user traits and uncomment the line
UserVoice.push(['identify', {
  email:      "<%= user.email %>",
  name:       "<%= user.displayName %>",
  created_at: <%= user.createdOn / 1000.0 %>,
  id:         "<%= user.id %>",
  //type:       'Owner', // Optional: segment your users by type
}]);

// Add default trigger to the bottom-right corner of the window:
UserVoice.push(['addTrigger', { mode: 'contact', trigger_position: 'bottom-right' }]);

// Or, use your own custom trigger:
//UserVoice.push(['addTrigger', '#id', { mode: 'contact' }]);

// Autoprompt for Satisfaction and SmartVote (only displayed under certain conditions)
UserVoice.push(['autoprompt', {}]);

// For now we hard-code English for all users.
UserVoice.push(["set", "locale", "en"]);

</script>

<%
  }
%>

<%
  //  Use Localytics and Google Analytics for usage analytics.
%>

<script>
  (function() {
    var options = {
      appVersion: "v0.90",
      polling: 10000,
      uploadTimeout: 60000,
      sessionTimeoutSeconds: 30,
      storage: 100000
    };

    var localyticsSession = LocalyticsSession("<%= process.env.MEMORY_DIVE_LOCALYTICS_APP_CODE %>", options);
    localyticsSession.open();
    localyticsSession.upload();
  })();
</script>

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-39389608-4', 'memorydive.io');
  ga('send', 'pageview');
</script>

<script>
  <%
    //  Fix the 304 issue with node-fresh and Safari by always generating fresh content.
    //  TODO: Remove the fix once we switch to static serving.
  %>
  (function() {
    var timestamp = <%= new Date().getTime() %>;
  });
</script>

<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.5.1/moment.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jstimezonedetect/1.0.4/jstz.min.js"></script>
